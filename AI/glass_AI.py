# -*- coding: utf-8 -*-
"""Glass-AI-2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1u_gQ_oyHx-9IBBpY7P_q4UvJ8gbeGsFY
"""

# АВТОРЫ: Bormotoon
import random  # импорт библиотеки случайных чисел

# Создаём словарь стаканов
the_glasses = {1: [1, 1, 1, 2, 2, 2],
               2: [1, 1, 1, 2, 2, 2],
               3: [1, 1, 1, 2, 2, 2],
               4: [1, 1, 1, 2, 2, 2],
               5: [1, 1, 1, 2, 2, 2],
               6: [1, 1, 1, 2, 2, 2],
               7: [1, 1, 1, 2, 2, 2],
               8: [1, 1, 1, 2, 2, 2],
               9: [1, 1, 1, 2, 2, 2],
               10: [1, 1, 1, 2, 2, 2],
               11: [1, 1, 1, 2, 2, 2]}

used_glasses = {}  # вывод словаря стаканов
situation = 11  # задание стартовой ситуации на столе
ai_is_winner = False  # маркер победы ИИ (первым ходит проигравший в прошлом раунде)


def move(situation):  # сделать ход (выбрать случайную бумажку из стакана и вернуть значение)
    print("Ходит ИИ:")
    the_move = random.choice(the_glasses[situation])
    print(f"ИИ взял {the_move} палочек.")
    return the_move


def used_glass_fill(situation, move):  # записать использованные стаканы и бумажки)
    used_glasses.update({situation: move})


print(f"На столе {situation} палочек.")
if ai_is_winner == False:
    choice = int(input("Сколько палочек взять (1 или 2): "))
    while choice != 1 and choice != 2:
        choice = int(input("Сказано же, дебил, одну или две!"))  # Человек выбирает сколько взять
    situation = situation - choice  # Обновление игровой ситуации
    print(f"На столе {situation} палочек.")
    situation = situation - move(situation)  # Ход ИИ, обновление ситуации
    print(f"На столе {situation} палочек.")
