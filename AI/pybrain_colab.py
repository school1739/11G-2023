# -*- coding: utf-8 -*-
"""Pybrain.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xs7UCl6N6a8w_zkgL4Q9rxpqvlFJwwKZ
"""

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫ –≤ Colab
!pip install pybrain3
!pip install scipy
!pip install numpy
!pip install tqdm

import sys
import numpy as np
from tqdm import tqdm
import time
# –ö–æ—Å—Ç—ã–ª—å –¥–ª—è –ø–æ—á–∏–Ω–∫–∏ PyBrain3
sys.modules["scipy.random"] = np.random

from pybrain3.tools.shortcuts import buildNetwork
from pybrain3.datasets import SupervisedDataSet
from pybrain3.supervised.trainers import BackpropTrainer

import matplotlib.pyplot as plt

the_dataset=SupervisedDataSet(2,1) # –°–æ–∑–¥–∞—ë–º –¥–∞—Ç–∞—Å–µ—Ç

# –ù–∞–±–æ—Ä –º–æ–¥–µ–ª–µ–π –¥–ª—è –æ–±—É—á–µ–Ω–∏—è
model_XOR=[
    [(0,0), (0)],
    [(0,1), (1)],
    [(1,0), (1)],
    [(1,1), (0)]
]

model_AND=[
    [(0,0), (0,)],
    [(0,1), (0,)],
    [(1,0), (0,)],
    [(1,1), (1,)]
]

model_OR=[
    [(0,0), (0,)],
    [(0,1), (1,)],
    [(1,0), (1,)],
    [(1,1), (1,)]
]

# –ë—ã—Å—Ç—Ä—ã–π –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏
current_model=model_XOR

# –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞—Ç–∞—Å–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É—è –º–æ–¥–µ–ª—å
for input, target in tqdm(current_model):
    the_dataset.addSample(input, target)
    time.sleep(0.5)

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–µ–π—Ä–æ—Å–µ—Ç—å (2 –≤—Ö–æ–¥–∞, 3 —Å–∫—Ä—ã—Ç—ã—Ö —Å–ª–æ—è, 1 –≤—ã—Ö–æ–¥–Ω–æ–π –Ω–µ–π—Ä–æ–Ω)
the_network=buildNetwork(2,3,1)
trainer=BackpropTrainer(the_network, the_dataset)
# ü¶Ñ Progress bar(In future)
# –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏–π –æ—à–∏–±–æ–∫
training_values=[]

for epoch in tqdm(range(10000)):
    training_values.append(trainer.train())

for value in enumerate(training_values):
    print(value)

plt.plot(training_values)
plt.show()

print(np.round(the_network.activate([0,0])))
print(np.round(the_network.activate([0,1])))
print(np.round(the_network.activate([1,0])))
print(np.round(the_network.activate([1,1])))

