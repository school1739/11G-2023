from random import randrange, getrandbits


def gcd(m, n):
    while m != n:
        if m > n:
            m = m - n
        else:
            n = n - m
    return n

def isPrime(n, k=128):
    if n == 2 or n == 3:
        return True
    if n <= 1 or n % 2 == 0:
        return False
    s = 0
    r = n - 1
    while r & 1 == 0:
        s += 1
        r //= 2
    for _ in range(k):
        a = randrange(2, n - 1)
        x = pow(a, r, n)
        if x != 1 and x != n - 1:
            j = 1
            while j < s and x != n - 1:
                x = pow(x, 2, n)
                if x == 1:
                    return False
                j += 1
            if x != n - 1:
                return False
    return True
def generatePrePrime(length):
    p = getrandbits(length)
    p |= (1 << length - 1) | 1
    return p

def generatePrime(length):
    p = 4
    while not isPrime(p, 128):
        p = generatePrePrime(length)
    return p

def generateKeys():
    p = generatePrime(1024)
    q = generatePrime(1024)
    print('Числа p и q выбраны')
    n = p * q
    phi = (p - 1) * (q - 1)
    print('Сгенерирован Фи')

    e = 1
    while n % e == 0:
        e = generatePrime(875)

    print('Найден е')
    d = (phi  * e)

    return [(e, n), (d, n)]

keys = generateKeys()

public = open('publicKey.txt', 'w').write(str(keys[0]))
public = open('privateKey.txt', 'w').write(str(keys[1]))
